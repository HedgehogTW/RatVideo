//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: extract_frame.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "extract_frame.h"


// Declare the bitmap loading function
extern void wxC19DCInitBitmapResources();

static bool bBitmapLoaded = false;


DlgExtractFrameBase::DlgExtractFrameBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC19DCInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* boxSizer2 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer2);
    
    wxStaticBoxSizer* staticBoxSizer4 = new wxStaticBoxSizer( new wxStaticBox(this, wxID_ANY, _("Select Frames")), wxHORIZONTAL);
    
    boxSizer2->Add(staticBoxSizer4, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer18 = new wxFlexGridSizer(0, 5, 0, 0);
    flexGridSizer18->SetFlexibleDirection( wxBOTH );
    flexGridSizer18->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    staticBoxSizer4->Add(flexGridSizer18, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText6 = new wxStaticText(this, wxID_ANY, _("From"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer18->Add(m_staticText6, 0, wxALL, WXC_FROM_DIP(5));
    
    m_textCtrlFromMM = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(50,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_textCtrlFromMM->SetHint(wxT(""));
    #endif
    
    flexGridSizer18->Add(m_textCtrlFromMM, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText10 = new wxStaticText(this, wxID_ANY, _("mm"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer18->Add(m_staticText10, 0, wxALL, WXC_FROM_DIP(5));
    
    m_textCtrlFromSS = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(50,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_textCtrlFromSS->SetHint(wxT(""));
    #endif
    
    flexGridSizer18->Add(m_textCtrlFromSS, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText14 = new wxStaticText(this, wxID_ANY, _("ss"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer18->Add(m_staticText14, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText20 = new wxStaticText(this, wxID_ANY, _("To"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer18->Add(m_staticText20, 0, wxALL, WXC_FROM_DIP(5));
    
    m_textCtrlToMM = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(50,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_textCtrlToMM->SetHint(wxT(""));
    #endif
    
    flexGridSizer18->Add(m_textCtrlToMM, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText22 = new wxStaticText(this, wxID_ANY, _("mm"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer18->Add(m_staticText22, 0, wxALL, WXC_FROM_DIP(5));
    
    m_textCtrlToSS = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(50,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_textCtrlToSS->SetHint(wxT(""));
    #endif
    
    flexGridSizer18->Add(m_textCtrlToSS, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText26 = new wxStaticText(this, wxID_ANY, _("ss"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    flexGridSizer18->Add(m_staticText26, 0, wxALL, WXC_FROM_DIP(5));
    
    m_stdBtnSizer28 = new wxStdDialogButtonSizer();
    
    boxSizer2->Add(m_stdBtnSizer28, 0, wxALL|wxALIGN_RIGHT, WXC_FROM_DIP(5));
    
    m_buttonOK = new wxButton(this, wxID_OK, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_buttonOK->SetDefault();
    m_stdBtnSizer28->AddButton(m_buttonOK);
    
    m_buttonCancel = new wxButton(this, wxID_CANCEL, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_stdBtnSizer28->AddButton(m_buttonCancel);
    m_stdBtnSizer28->Realize();
    
    SetName(wxT("DlgExtractFrameBase"));
    SetSize(300,200);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

DlgExtractFrameBase::~DlgExtractFrameBase()
{
}
