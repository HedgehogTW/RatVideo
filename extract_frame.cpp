//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: extract_frame.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "extract_frame.h"


// Declare the bitmap loading function
extern void wxC19DCInitBitmapResources();

static bool bBitmapLoaded = false;


DlgExtractFrameBase::DlgExtractFrameBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC19DCInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* boxSizer2 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(boxSizer2);
    
    m_panel34 = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    
    boxSizer2->Add(m_panel34, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxFlexGridSizer* flexGridSizer53 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer53->SetFlexibleDirection( wxBOTH );
    flexGridSizer53->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    m_panel34->SetSizer(flexGridSizer53);
    
    m_staticText38 = new wxStaticText(m_panel34, wxID_ANY, _("Output Path"), wxDefaultPosition, wxDLG_UNIT(m_panel34, wxSize(-1,-1)), 0);
    
    flexGridSizer53->Add(m_staticText38, 0, wxALL, WXC_FROM_DIP(5));
    
    m_textCtrlOutPath = new wxTextCtrl(m_panel34, wxID_ANY, wxT("d:/tmp/"), wxDefaultPosition, wxDLG_UNIT(m_panel34, wxSize(200,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_textCtrlOutPath->SetHint(wxT(""));
    #endif
    
    flexGridSizer53->Add(m_textCtrlOutPath, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_staticText6 = new wxStaticText(m_panel34, wxID_ANY, _("From (mm:ss)"), wxDefaultPosition, wxDLG_UNIT(m_panel34, wxSize(-1,-1)), 0);
    
    flexGridSizer53->Add(m_staticText6, 0, wxALL, WXC_FROM_DIP(5));
    
    m_textCtrlFrom = new wxTextCtrl(m_panel34, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel34, wxSize(50,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_textCtrlFrom->SetHint(wxT(""));
    #endif
    
    flexGridSizer53->Add(m_textCtrlFrom, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText20 = new wxStaticText(m_panel34, wxID_ANY, _("To (mm:ss)"), wxDefaultPosition, wxDLG_UNIT(m_panel34, wxSize(-1,-1)), 0);
    
    flexGridSizer53->Add(m_staticText20, 0, wxALL, WXC_FROM_DIP(5));
    
    m_textCtrlTo = new wxTextCtrl(m_panel34, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel34, wxSize(50,-1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_textCtrlTo->SetHint(wxT(""));
    #endif
    
    flexGridSizer53->Add(m_textCtrlTo, 0, wxALL, WXC_FROM_DIP(5));
    
    m_stdBtnSizer48 = new wxStdDialogButtonSizer();
    
    boxSizer2->Add(m_stdBtnSizer48, 0, wxALL, WXC_FROM_DIP(5));
    
    m_button50 = new wxButton(this, wxID_OK, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_button50->SetDefault();
    m_stdBtnSizer48->AddButton(m_button50);
    
    m_button52 = new wxButton(this, wxID_CANCEL, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_stdBtnSizer48->AddButton(m_button52);
    m_stdBtnSizer48->Realize();
    
    SetName(wxT("DlgExtractFrameBase"));
    SetSize(500,250);
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

DlgExtractFrameBase::~DlgExtractFrameBase()
{
}
